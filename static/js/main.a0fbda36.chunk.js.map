{"version":3,"sources":["contexts/ThemeContext.js","contexts/CountryContext.js","components/ModeToggler/ModeToggler.js","components/Header/Header.js","components/Search/Search.js","components/Filter/Filter.js","components/Controls/Controls.js","components/Shimmer/Shimmer.js","components/CardSkeleton/CardSkeleton.js","components/Card/Card.js","components/CardList/CardList.js","components/Error/Error.js","components/ScrollToTop/ScrollToTop.js","components/Home/Home.js","components/Loading/Loading.js","components/CountryDetails/CountryDetails.js","components/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","sessionData","sessionStorage","getItem","JSON","parse","darkMode","setDarkMode","useEffect","setItem","stringify","Provider","value","toggleDarkMode","prevState","CountryContext","CountryProvider","loading","setLoading","error","setError","countries","setCountries","search","setSearch","filter","setFilter","a","fetch","response","json","console","log","fetchCountries","searchedCountries","country","name","toLowerCase","includes","trim","filteredCountries","region","handleSearch","e","target","handleClearSearch","handleSelectRegion","getAttribute","ModeToggler","useContext","className","htmlFor","type","id","checked","onChange","Header","to","Search","placeholder","onClick","Filter","menuIsOpen","setMenuIsOpen","regions","map","uniqueRegions","Set","document","addEventListener","handleClickOutside","classList","contains","uniqueRegion","Controls","Shimmer","CardSkeleton","Card","props","flag","population","capital","src","alt","toLocaleString","maximumFractionDigits","CardList","skeletonCards","Array","_","i","Error","ScrollToTop","isVisible","setIsVisible","toggleVisibility","window","pageYOffset","removeEventListener","scrollTo","top","behavior","Home","Loading","CountryDetails","match","setCountry","borders","setBorders","params","Promise","all","border","countryBorders","borderNames","fetchCountry","nativeName","subregion","currencies","languages","language","length","NotFound","location","useLocation","history","useHistory","pathname","push","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a0fbda36.chunk.js","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n\tconst [darkMode, setDarkMode] = useState(() => {\r\n\t\tconst sessionData = sessionStorage.getItem(\"darkMode\");\r\n\t\treturn sessionData ? JSON.parse(sessionData) : false;\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tsessionStorage.setItem(\"darkMode\", JSON.stringify(darkMode));\r\n\t}, [darkMode]);\r\n\r\n\tconst toggleDarkMode = () => {\r\n\t\tsetDarkMode(prevState => !prevState);\r\n\t};\r\n\r\n\treturn <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>{children}</ThemeContext.Provider>;\r\n};\r\n","import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const CountryContext = createContext();\r\n\r\nexport const CountryProvider = ({ children }) => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [countries, setCountries] = useState([]);\r\n\tconst [search, setSearch] = useState(\"\");\r\n\tconst [filter, setFilter] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchCountries = async () => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(false);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n\t\t\t\tconst countries = await response.json();\r\n\t\t\t\tsetCountries(countries);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetError(true);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchCountries();\r\n\t}, []);\r\n\r\n\tconst handleSearch = e => {\r\n\t\tsetSearch(e.target.value);\r\n\t};\r\n\r\n\tconst handleClearSearch = () => {\r\n\t\tsetSearch(\"\");\r\n\t};\r\n\r\n\tconst handleSelectRegion = e => {\r\n\t\tif (e.target.getAttribute(\"data-name\") === filter) return setFilter(\"\");\r\n\t\tsetFilter(e.target.getAttribute(\"data-name\"));\r\n\t};\r\n\r\n\tconst searchedCountries = search\r\n\t\t? countries.filter(country => {\r\n\t\t\t\tif (country.name.toLowerCase().includes(search.trim().toLowerCase())) {\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t  })\r\n\t\t: countries;\r\n\r\n\tconst filteredCountries = filter\r\n\t\t? searchedCountries.filter(country => country.region === filter)\r\n\t\t: searchedCountries;\r\n\r\n\treturn (\r\n\t\t<CountryContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tloading,\r\n\t\t\t\terror,\r\n\t\t\t\tcountries,\r\n\t\t\t\tfilteredCountries,\r\n\t\t\t\tsearch,\r\n\t\t\t\tfilter,\r\n\t\t\t\thandleSearch,\r\n\t\t\t\thandleClearSearch,\r\n\t\t\t\thandleSelectRegion,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</CountryContext.Provider>\r\n\t);\r\n};\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\r\nimport \"./ModeToggler.css\";\r\n\r\nconst ModeToggler = () => {\r\n\tconst { darkMode, toggleDarkMode } = useContext(ThemeContext);\r\n\r\n\treturn (\r\n\t\t<label className={`mode-toggler ${darkMode ? \"mode-toggler--dark\" : \"\"}`} htmlFor=\"darkMode\">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"mode-toggler__input\"\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tid=\"darkMode\"\r\n\t\t\t\tchecked={darkMode}\r\n\t\t\t\tonChange={toggleDarkMode}\r\n\t\t\t/>\r\n\t\t\t<Brightness3Icon className=\"mode-toggler__icon\" />\r\n\t\t\tDark mode\r\n\t\t</label>\r\n\t);\r\n};\r\n\r\nexport default ModeToggler;\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ModeToggler from \"../ModeToggler/ModeToggler\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\r\n\treturn (\r\n\t\t<header className={`header ${darkMode ? \"header--dark\" : \"\"}`}>\r\n\t\t\t<div className=\"header__content container\">\r\n\t\t\t\t<Link className=\"header__logo\" to=\"/\">\r\n\t\t\t\t\tWhere in the world?\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t\t<ModeToggler />\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport { CountryContext } from \"../../contexts/CountryContext\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport \"./Search.css\";\r\n\r\nconst Search = () => {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\tconst { search, handleSearch, handleClearSearch } = useContext(CountryContext);\r\n\r\n\treturn (\r\n\t\t<div className={`search ${darkMode ? \"search--dark\" : \"\"}`}>\r\n\t\t\t<SearchIcon className=\"search__icon search__icon--search\" />\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"search__input\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Search for a country…\"\r\n\t\t\t\tvalue={search}\r\n\t\t\t\tonChange={handleSearch}\r\n\t\t\t/>\r\n\t\t\t{search && <ClearIcon className=\"search__icon search__icon--clear\" onClick={handleClearSearch} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import { useContext, useState, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport { CountryContext } from \"../../contexts/CountryContext\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = () => {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\tconst { countries, filter, handleSelectRegion } = useContext(CountryContext);\r\n\tconst [menuIsOpen, setMenuIsOpen] = useState(false);\r\n\r\n\tconst regions = countries.map(country => country.region);\r\n\tconst uniqueRegions = [...new Set(regions)].filter(region => region !== \"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMenuIsOpen(false);\r\n\t}, [filter]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\r\n\t}, []);\r\n\r\n\tconst handleClickOutside = e => {\r\n\t\tif (!e.target.classList.contains(\"filter__region\") && !e.target.classList.contains(\"filter__toggler\"))\r\n\t\t\tsetMenuIsOpen(false);\r\n\t};\r\n\r\n\tconst handleToggleMenu = () => {\r\n\t\tsetMenuIsOpen(prevState => !prevState);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={`filter ${darkMode ? \"filter--dark\" : \"\"}`}>\r\n\t\t\t<div className=\"filter__toggler\" onClick={handleToggleMenu}>\r\n\t\t\t\t{filter ? filter : \"Filter by Region\"}\r\n\t\t\t\t{menuIsOpen ? (\r\n\t\t\t\t\t<KeyboardArrowUpIcon className=\"filter__icon\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<KeyboardArrowDownIcon className=\"filter__icon\" />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<ul className={`filter__menu ${menuIsOpen ? \"filter__menu--open\" : \"\"}`}>\r\n\t\t\t\t{uniqueRegions.map(uniqueRegion => (\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"filter__region\"\r\n\t\t\t\t\t\tdata-name={uniqueRegion}\r\n\t\t\t\t\t\tkey={uniqueRegion}\r\n\t\t\t\t\t\tonClick={handleSelectRegion}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{uniqueRegion}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import Search from \"../Search/Search\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport \"./Controls.css\";\r\n\r\nconst Controls = () => {\r\n\treturn (\r\n\t\t<div className=\"controls\">\r\n\t\t\t<Search />\r\n\t\t\t<Filter />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Controls;\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport \"./Shimmer.css\";\r\n\r\nconst Shimmer = ({ className }) => {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\r\n\treturn (\r\n\t\t<div className={`${className} shimmer ${darkMode ? \"shimmer--dark\" : \"\"}`}>\r\n\t\t\t<div className=\"shimmer__shine\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Shimmer;\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport Shimmer from \"../Shimmer/Shimmer\";\r\nimport \"./CardSkeleton.css\";\r\n\r\nconst CardSkeleton = () => {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\r\n\treturn (\r\n\t\t<li className={`card-skeleton ${darkMode ? \"card-skeleton--dark\" : \"\"}`}>\r\n\t\t\t<Shimmer className=\"card-skeleton__shimmer\" />\r\n\t\t\t<div className=\"card-skeleton__flag\"></div>\r\n\t\t\t<div className=\"card-skeleton__info\">\r\n\t\t\t\t<div className=\"card-skeleton__title\"></div>\r\n\t\t\t\t<div className=\"card-skeleton__stat\"></div>\r\n\t\t\t\t<div className=\"card-skeleton__stat\"></div>\r\n\t\t\t\t<div className=\"card-skeleton__stat\"></div>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default CardSkeleton;\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = props => {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\tconst { flag, name, population, region, capital } = props;\r\n\r\n\treturn (\r\n\t\t<li className={`card ${darkMode ? \"card--dark\" : \"\"}`}>\r\n\t\t\t<img className=\"card__flag\" src={flag} alt={name} />\r\n\r\n\t\t\t<div className=\"card__info\">\r\n\t\t\t\t<h3 className=\"card__title\">{name}</h3>\r\n\r\n\t\t\t\t<p className=\"card__stat\">\r\n\t\t\t\t\tPopulation:{\" \"}\r\n\t\t\t\t\t<span className=\"card__stat--light\">\r\n\t\t\t\t\t\t{population.toLocaleString(\"en-US\", { maximumFractionDigits: 2 })}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<p className=\"card__stat\">\r\n\t\t\t\t\tRegion: <span className=\"card__stat--light\">{region}</span>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<p className=\"card__stat\">\r\n\t\t\t\t\tCapital: <span className=\"card__stat--light\">{capital}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CountryContext } from \"../../contexts/CountryContext\";\r\nimport CardSkeleton from \"../CardSkeleton/CardSkeleton\";\r\nimport Card from \"../Card/Card\";\r\nimport \"./CardList.css\";\r\n\r\nconst CardList = () => {\r\n\tconst { loading, filteredCountries } = useContext(CountryContext);\r\n\tconst skeletonCards = [...Array(8)];\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<ul className=\"card-list\">\r\n\t\t\t\t{skeletonCards.map((_, i) => (\r\n\t\t\t\t\t<CardSkeleton key={i} />\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<ul className=\"card-list\">\r\n\t\t\t\t{filteredCountries.map(country => (\r\n\t\t\t\t\t<Link to={`/${country.name}`} key={country.name}>\r\n\t\t\t\t\t\t<Card {...country} />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default CardList;\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport \"./Error.css\"\r\n\r\nconst Error = () => {\r\n  const { darkMode } = useContext(ThemeContext);\r\n  return <h3 className={`error ${darkMode ? \"error--dark\" : \"\"}`}>Something went wrong. Please try again later.</h3> \r\n}\r\n\r\nexport default Error\r\n","import { useContext, useState, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport \"./ScrollToTop.css\";\r\n\r\nconst ScrollToTop = ({ className }) => {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\tconst [isVisible, setIsVisible] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst toggleVisibility = () => {\r\n\t\t\tif (window.pageYOffset > 500) {\r\n\t\t\t\tsetIsVisible(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetIsVisible(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener(\"scroll\", toggleVisibility);\r\n\r\n\t\treturn () => window.removeEventListener(\"scroll\", toggleVisibility);\r\n\t}, []);\r\n\r\n\tconst handleScrollToTop = () => {\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: 0,\r\n\t\t\tbehavior: \"smooth\",\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={`${className} scroll-to-top ${isVisible ? \"scroll-to-top--visible\" : \"\"} ${\r\n\t\t\t\tdarkMode ? \"scroll-to-top--dark\" : \"\"\r\n\t\t\t}`}\r\n\t\t\tonClick={handleScrollToTop}\r\n\t\t>\r\n\t\t\t<KeyboardArrowUpIcon />\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import { useContext } from \"react\";\r\nimport { CountryContext } from \"../../contexts/CountryContext\";\r\nimport Controls from \"../Controls/Controls\";\r\nimport CardList from \"../CardList/CardList\";\r\nimport Error from \"../Error/Error\";\r\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = () => {\r\n\tconst { error } = useContext(CountryContext);\r\n\r\n\treturn (\r\n\t\t<div className=\"home container\">\r\n\t\t\t<Controls />\r\n\r\n\t\t\t{!error && <CardList />}\r\n\r\n\t\t\t{error && <Error />}\r\n\r\n\t\t\t<ScrollToTop className=\"home__scroll\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport \"./Loading.css\";\r\n\r\nconst Loading = () => {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\r\n\treturn <h3 className={`loading ${darkMode ? \"loading--dark\" : \"\"}`}>Loading...</h3>;\r\n};\r\n\r\nexport default Loading;\r\n","import { useContext, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Error from \"../Error/Error\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport \"./CountryDetails.css\";\r\n\r\nconst CountryDetails = ({ match }) => {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(true);\r\n\tconst [country, setCountry] = useState([]);\r\n\tconst [borders, setBorders] = useState([]);\r\n\r\n\t//Fetch country details and its borders\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetError(false);\r\n\r\n\t\tconst fetchCountry = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(\r\n\t\t\t\t\t`https://restcountries.eu/rest/v2/name/${match.params.country}?fullText=true`\r\n\t\t\t\t);\r\n\t\t\t\tconst country = await response.json();\r\n\t\t\t\tsetCountry(country);\r\n\r\n\t\t\t\t//FETCH COUNTRY BORDERS\r\n\t\t\t\tconst borderNames = await Promise.all(\r\n\t\t\t\t\tcountry[0].borders.map(async border => {\r\n\t\t\t\t\t\tconst response = await fetch(`https://restcountries.eu/rest/v2/alpha?codes=${border}`);\r\n\t\t\t\t\t\tconst countryBorders = await response.json();\r\n\t\t\t\t\t\treturn countryBorders[0].name;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\tsetBorders(borderNames);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetError(true);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\t\tfetchCountry();\r\n\t}, [match.params.country]);\r\n\r\n\tif (loading) return <Loading />;\r\n\tif (error) return <Error />;\r\n\r\n\treturn (\r\n\t\t<div className={`country-details ${darkMode ? \"country-details--dark\" : \"\"} container`}>\r\n\t\t\t<Link className=\"country-details__link\" to=\"/\">\r\n\t\t\t\t<KeyboardBackspaceIcon className=\"country-details__icon\" />\r\n\t\t\t\tBack\r\n\t\t\t</Link>\r\n\r\n\t\t\t<div className=\"country-details__content\">\r\n\t\t\t\t<img className=\"country-details__flag\" src={country[0]?.flag} alt={country[0]?.name} />\r\n\r\n\t\t\t\t<div className=\"country-details__info\">\r\n\t\t\t\t\t<h3 className=\"country-details__title\">{country[0]?.name}</h3>\r\n\r\n\t\t\t\t\t<div className=\"country-details__info-group country-details__info-group--one\">\r\n\t\t\t\t\t\t<p className=\"country-details__stat\">\r\n\t\t\t\t\t\t\tNative Name: <span className=\"country-details__stat--light\">{country[0]?.nativeName}</span>\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<p className=\"country-details__stat\">\r\n\t\t\t\t\t\t\tPopulation:{\" \"}\r\n\t\t\t\t\t\t\t<span className=\"country-details__stat--light\">\r\n\t\t\t\t\t\t\t\t{country[0]?.population.toLocaleString(\"en-US\", { maximumFractionDigits: 2 })}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<p className=\"country-details__stat\">\r\n\t\t\t\t\t\t\tRegion: <span className=\"country-details__stat--light\">{country[0]?.region}</span>\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<p className=\"country-details__stat\">\r\n\t\t\t\t\t\t\tSub Region: <span className=\"country-details__stat--light\">{country[0]?.subregion}</span>\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<p className=\"country-details__stat\">\r\n\t\t\t\t\t\t\tCapital: <span className=\"country-details__stat--light\">{country[0]?.capital}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"country-details__info-group country-details__info-group--two\">\r\n\t\t\t\t\t\t<p className=\"country-details__stat\">\r\n\t\t\t\t\t\t\tTop Level Domain: <span className=\"country-details__stat--light\">.be</span>\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<p className=\"country-details__stat\">\r\n\t\t\t\t\t\t\tCurrencies:{\" \"}\r\n\t\t\t\t\t\t\t<span className=\"country-details__stat--light\">{country[0]?.currencies[0].name}</span>\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<p className=\"country-details__stat\">\r\n\t\t\t\t\t\t\tLanguages:{\" \"}\r\n\t\t\t\t\t\t\t{country[0]?.languages.map((language, i, languages) => (\r\n\t\t\t\t\t\t\t\t<span className=\"country-details__stat--light\" key={language.name}>\r\n\t\t\t\t\t\t\t\t\t{`${language.name}${i !== languages.length - 1 ? \", \" : \"\"}`}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{!!borders.length && (\r\n\t\t\t\t\t\t<div className=\"country-details__info-group country-details__info-group--three\">\r\n\t\t\t\t\t\t\t<h4 className=\"country-details__stat\">Border Countries:</h4>\r\n\t\t\t\t\t\t\t<ul className=\"country-details__borders\">\r\n\t\t\t\t\t\t\t\t{borders.map(border => (\r\n\t\t\t\t\t\t\t\t\t<Link className=\"country-details__border\" to={`/${border}`} key={border}>\r\n\t\t\t\t\t\t\t\t\t\t{border}\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CountryDetails;\r\n","import { useContext } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport \"./NotFound.css\";\r\n\r\nconst NotFound = () => {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleGoHome = () => {\r\n\t\thistory.push(\"/\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={`not-found ${darkMode ? \"not-found--dark\" : \"\"}`}>\r\n\t\t\t<h3 className=\"not-found__message\">\r\n\t\t\t\tNo match for <code className=\"not-found__path\">{location.pathname}</code>\r\n\t\t\t</h3>\r\n\r\n\t\t\t<button className=\"not-found__button\" onClick={handleGoHome}>\r\n\t\t\t\tGo Home\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NotFound;\r\n","import { useContext } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport Header from \"../Header/Header\";\nimport Home from \"../Home/Home\";\nimport CountryDetails from \"../CountryDetails/CountryDetails\";\nimport NotFound from \"../NotFound/NotFound\";\nimport \"./App.css\";\n\nconst App = () => {\n\tconst { darkMode } = useContext(ThemeContext);\n\n\treturn (\n\t\t<div className={`app ${darkMode ? \"app--dark\" : \"\"}`}>\n\t\t\t<Header />\n\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t<Route exact path=\"/:country\" component={CountryDetails} />\n\t\t\t\t<Route component={NotFound} />\n\t\t\t</Switch>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\nimport { CountryProvider } from \"./contexts/CountryContext\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n\t<Router>\n\t\t<ThemeProvider>\n\t\t\t<CountryProvider>\n\t\t\t\t<App />\n\t\t\t</CountryProvider>\n\t\t</ThemeProvider>\n\t</Router>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}